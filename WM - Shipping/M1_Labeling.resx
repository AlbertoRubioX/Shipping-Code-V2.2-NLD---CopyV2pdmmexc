<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btncerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAHNzcwCyfnMAAGaaADC23wA2uuEAOLziADy+4wA/wOQAQcDlAEbE
        5gBKxegATcnpAFHK6gBWze0AWc/tAFrQ7gBd0O8AXtLwAGHU8QBl1vIAZ9jzAGnZ9ABt2/YAb9z2AHDd
        9gBy3/gAdN/4AHbh+AB54voAe+T6AH3l/AC4iYkAzZmZAMypngDEqqcAxauoAMasqQDNtbAAzr63ANK6
        tADPwbsAz8G8ANfFugDQxb8A6c+/AIDm/ACD6P4AhOn+AOLY0wD75M8A/+bPAP/o0gD/6tcA/+vYAP/t
        3QD/8OMA//HlAP/z6QD/9esA/vXtAP748gD5+PcA/vr1APr5+AD++/gA/vz5AP7+/QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>